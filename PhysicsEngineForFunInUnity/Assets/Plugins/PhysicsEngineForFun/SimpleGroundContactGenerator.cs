//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysicsEngineForFun
{
    public class SimpleGroundContactGenerator : IParticleContactGenerator
    {
        private global::System.Runtime.InteropServices.HandleRef swigCPtr;

        internal SimpleGroundContactGenerator(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_SWIGUpcast(cPtr), cMemoryOwn)
        {
            swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
        }

        internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SimpleGroundContactGenerator obj)
        {
            return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
        }

        ~SimpleGroundContactGenerator()
        {
            Dispose();
        }

        public override void Dispose()
        {
            lock (this)
            {
                if (swigCPtr.Handle != global::System.IntPtr.Zero)
                {
                    if (swigCMemOwn)
                    {
                        swigCMemOwn = false;
                        PhysicsEngineForFunPINVOKE.delete_SimpleGroundContactGenerator(swigCPtr);
                    }
                    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
                global::System.GC.SuppressFinalize(this);
                base.Dispose();
            }
        }

        public override bool AddContact(ParticleContact contact, uint limit)
        {
            bool ret = PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_AddContact(swigCPtr, ParticleContact.getCPtr(contact), limit);
            return ret;
        }

        public Vector3 pointInGround
        {
            set
            {
                PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_pointInGround_set(swigCPtr, Vector3.getCPtr(value));
            }
            get
            {
                global::System.IntPtr cPtr = PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_pointInGround_get(swigCPtr);
                Vector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector3(cPtr, false);
                return ret;
            }
        }

        public Vector3 normal
        {
            set
            {
                PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_normal_set(swigCPtr, Vector3.getCPtr(value));
            }
            get
            {
                global::System.IntPtr cPtr = PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_normal_get(swigCPtr);
                Vector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector3(cPtr, false);
                return ret;
            }
        }

        public Particle particle
        {
            set
            {
                PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_particle_set(swigCPtr, Particle.getCPtr(value));
            }
            get
            {
                global::System.IntPtr cPtr = PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_particle_get(swigCPtr);
                Particle ret = (cPtr == global::System.IntPtr.Zero) ? null : new Particle(cPtr, false);
                return ret;
            }
        }

        public float restitutionCoefficient
        {
            set
            {
                PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_restitutionCoefficient_set(swigCPtr, value);
            }
            get
            {
                float ret = PhysicsEngineForFunPINVOKE.SimpleGroundContactGenerator_restitutionCoefficient_get(swigCPtr);
                return ret;
            }
        }

        public SimpleGroundContactGenerator() : this(PhysicsEngineForFunPINVOKE.new_SimpleGroundContactGenerator(), true)
        {
        }

    }

}